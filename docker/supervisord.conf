# Supervisor configuration for NEXUS-CORE
# Manages multiple services in production container

[supervisord]
nodaemon=true
user=root
logfile=/var/log/nexus/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/nexus
loglevel=info

# ================================
# Backend API Service
# ================================
[program:nexus-backend]
command=uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 4 --worker-class uvicorn.workers.UvicornWorker
directory=/app/backend
user=nexus
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/nexus/backend.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
environment=PYTHONPATH="/app/backend"

# ================================
# Nginx Reverse Proxy
# ================================
[program:nexus-nginx]
command=nginx -g 'daemon off;'
user=root
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/nexus/nginx.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
priority=200

# ================================
# Performance Monitor (Optional)
# ================================
[program:nexus-monitor]
command=python -c "
import asyncio
import time
from src.infrastructure.database.performance import performance_monitor, get_database_health

async def monitor_loop():
    while True:
        try:
            health = await get_database_health()
            stats = performance_monitor.get_stats(minutes=5)
            
            # Log important metrics
            print(f'Health: {health.get(\"status\", \"unknown\")}')
            print(f'Queries (5min): {stats.get(\"total_queries\", 0)}')
            print(f'Avg Response: {stats.get(\"average_execution_time\", 0):.3f}s')
            print(f'Cache Hit Rate: {stats.get(\"cache_hit_rate\", 0):.1f}%')
            
        except Exception as e:
            print(f'Monitor error: {e}')
        
        await asyncio.sleep(300)  # Every 5 minutes

asyncio.run(monitor_loop())
"
directory=/app/backend
user=nexus
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/nexus/monitor.log
stdout_logfile_maxbytes=5MB
stdout_logfile_backups=2
environment=PYTHONPATH="/app/backend"
priority=300

# ================================
# Log Rotation Service
# ================================
[program:nexus-logrotate]
command=sh -c "while true; do logrotate /etc/logrotate.d/nexus-core; sleep 3600; done"
user=root
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/nexus/logrotate.log
priority=400

# ================================
# Cleanup Service (Daily)
# ================================
[program:nexus-cleanup]
command=sh -c "
while true; do
    # Clean old logs
    find /var/log/nexus -name '*.log.*' -mtime +7 -delete
    
    # Clean cache if too large
    cache_size=$(du -sm /app/cache 2>/dev/null | cut -f1)
    if [ $cache_size -gt 1024 ]; then
        echo 'Cache size exceeded 1GB, cleaning...'
        find /app/cache -type f -mtime +1 -delete
    fi
    
    # Clean temp files
    find /tmp -name 'nexus-*' -mtime +1 -delete
    
    echo 'Cleanup completed'
    sleep 86400  # Daily
done
"
user=nexus
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/nexus/cleanup.log
priority=500

# ================================
# Event Listener for Process Monitoring
# ================================
[eventlistener:nexus-crashmail]
command=sh -c "
while read line; do
    echo \$line
    if echo \$line | grep -q 'PROCESS_STATE_FATAL'; then
        echo 'CRITICAL: Process crashed in NEXUS-CORE container'
        # Here you could send alerts to monitoring systems
    fi
done < /dev/stdin
"
events=PROCESS_STATE_FATAL
user=root
autostart=true
autorestart=true

# ================================
# RPC Interface
# ================================
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# ================================
# Control via inet_http_server (for debugging)
# ================================
[inet_http_server]
port=127.0.0.1:9001
username=nexus
password=nexus-supervisor

[supervisorctl]
serverurl=http://127.0.0.1:9001
username=nexus
password=nexus-supervisor